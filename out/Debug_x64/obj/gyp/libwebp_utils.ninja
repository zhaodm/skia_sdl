arch = environment.x86
cc = $cl_x86
cxx = $cl_x86
cc_host = $cl_x86
cxx_host = $cl_x86
pdbname_c = libwebp_utils.pdb
pdbname_cc = libwebp_utils.pdb
pchprefix = libwebp_utils
defines = -DSK_INTERNAL -DSK_GAMMA_SRGB -DSK_GAMMA_APPLY_TO_A8 $
    -DSK_SCALAR_TO_FLOAT_EXCLUDED -DSK_ALLOW_STATIC_GLOBAL_INITIALIZERS=1 $
    -DSK_SUPPORT_GPU=1 -DSK_SUPPORT_OPENCL=0 $
    -DSK_FORCE_DISTANCE_FIELD_TEXT=0 -DSK_SCALAR_IS_FLOAT $
    -DSK_BUILD_FOR_WIN32 -D_CRT_SECURE_NO_WARNINGS $
    -DGR_GL_FUNCTION_TYPE=__stdcall -DSK_DEVELOPER=1 -D_DEBUG
asmflags = 
rcflags = /I..\..\gyp
includes = -I..\..\third_party\externals\libwebp
midl_includes = 
cflags = /wd4275 /wd4345 /wd4355 /Od /W3 /ZI /GR- /MDd /FS
cflags_c = 
cflags_cc = /TP

build $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.bit_reader.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\bit_reader.c
build $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.bit_writer.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\bit_writer.c
build $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.color_cache.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\color_cache.c
build $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.filters.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\filters.c
build $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.huffman.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\huffman.c
build $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.huffman_encode.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\huffman_encode.c
build $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.quant_levels.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\quant_levels.c
build $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.quant_levels_dec.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\quant_levels_dec.c
build $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.rescaler.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\rescaler.c
build obj\third_party\externals\libwebp\src\utils\libwebp_utils.thread.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\thread.c
build obj\third_party\externals\libwebp\src\utils\libwebp_utils.utils.obj: $
    cc ..\..\third_party\externals\libwebp\src\utils\utils.c

build obj\gyp\libwebp_utils.lib: alink $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.bit_reader.obj $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.bit_writer.obj $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.color_cache.obj $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.filters.obj $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.huffman.obj $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.huffman_encode.obj $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.quant_levels.obj $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.quant_levels_dec.obj $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.rescaler.obj $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.thread.obj $
    obj\third_party\externals\libwebp\src\utils\libwebp_utils.utils.obj
  libflags = 
