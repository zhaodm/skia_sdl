arch = environment.x86
cc = $cl_x86
cxx = $cl_x86
cc_host = $cl_x86
cxx_host = $cl_x86
pdbname_c = picture_renderer.pdb
pdbname_cc = picture_renderer.pdb
pchprefix = picture_renderer
defines = -DSK_INTERNAL -DSK_GAMMA_SRGB -DSK_GAMMA_APPLY_TO_A8 $
    -DSK_SCALAR_TO_FLOAT_EXCLUDED -DSK_ALLOW_STATIC_GLOBAL_INITIALIZERS=1 $
    -DSK_SUPPORT_GPU=1 -DSK_SUPPORT_OPENCL=0 $
    -DSK_FORCE_DISTANCE_FIELD_TEXT=0 -DSK_SCALAR_IS_FLOAT $
    -DSK_BUILD_FOR_WIN32 -D_CRT_SECURE_NO_WARNINGS $
    -DGR_GL_FUNCTION_TYPE=__stdcall -DSK_DEVELOPER=1 -D_DEBUG
asmflags = 
rcflags = /I..\..\gyp
includes = -I..\..\src\core -I..\..\src\images -I..\..\src\lazy $
    -I..\..\src\pipe\utils -I..\..\src\utils -I..\..\src\gpu $
    -I..\..\tools\flags -I..\..\third_party\externals\jsoncpp\include $
    -I..\..\include\c -I..\..\include\config -I..\..\include\core $
    -I..\..\include\pathops -I..\..\include\pipe -I..\..\gyp\config\win $
    -I..\..\include\effects -I..\..\include\images -I..\..\include\ports $
    -I..\..\src\sfnt -I..\..\include\utils -I..\..\src\utils $
    -I..\..\include\utils\win -I..\..\include\gpu -I..\..\tools
midl_includes = 
cflags = /wd4275 /wd4345 /wd4355 /Od /W3 /WX /ZI /GR- /MDd /we4189 /FS
cflags_c = 
cflags_cc = /TP

build obj\tools\picture_renderer.image_expectations.obj: cxx $
    ..\..\tools\image_expectations.cpp
build obj\tools\picture_renderer.LazyDecodeBitmap.obj: cxx $
    ..\..\tools\LazyDecodeBitmap.cpp
build obj\tools\picture_renderer.PictureRenderer.obj: cxx $
    ..\..\tools\PictureRenderer.cpp
build obj\tools\picture_renderer.PictureRenderingFlags.obj: cxx $
    ..\..\tools\PictureRenderingFlags.cpp
build obj\tools\picture_renderer.CopyTilesRenderer.obj: cxx $
    ..\..\tools\CopyTilesRenderer.cpp
build obj\src\pipe\utils\picture_renderer.SamplePipeControllers.obj: cxx $
    ..\..\src\pipe\utils\SamplePipeControllers.cpp

build obj\gyp\picture_renderer.lib: alink $
    obj\tools\picture_renderer.image_expectations.obj $
    obj\tools\picture_renderer.LazyDecodeBitmap.obj $
    obj\tools\picture_renderer.PictureRenderer.obj $
    obj\tools\picture_renderer.PictureRenderingFlags.obj $
    obj\tools\picture_renderer.CopyTilesRenderer.obj $
    obj\src\pipe\utils\picture_renderer.SamplePipeControllers.obj || $
    obj\gyp\skia_lib.actions_depends.stamp
  libflags = 
